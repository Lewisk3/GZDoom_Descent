class DescentEvents : EventHandler
{	
	override void WorldThingDied(WorldEvent e)
	{
		Actor killer = e.Inflictor;
		if(!killer) killer = e.Thing.target;
		if(killer && killer.bMISSILE) killer = killer.target;
		
		let plrKiller = DescentPlayer(killer);
		if(!plrKiller) return;
		
		plrKiller.scorePts += e.Thing.SpawnHealth();
		vector3 explodePos = level.vec3offset(e.Thing.pos, (0,0,e.Thing.Height*0.5));
		Actor.Spawn("EnemyExplosion", explodePos);
		
		int energyOdds = 25;
		energyOdds -= clamp(ceil(e.Thing.SpawnHealth() / 30), 0, energyOdds);
			
		if(!energyOdds || random[EDeathDrops](0,energyOdds) == 0)
			Actor.Spawn("EnergyBoost", e.Thing.pos);
			
		if(random[SDeathDrops](0,100) == 0)
			Actor.Spawn("ShieldsBoost", e.Thing.pos);
	}
	
	override void NetworkProcess(ConsoleEvent e)
    {
		let dscplr = DescentPlayer(players[e.Player].mo);
			
		// Controls
		if(dscplr)
		{
			if(e.name ~== "rearview") dscplr.rearview = !dscplr.rearview;
		
			// Powerups 
			if(e.Name ~== "toggleheadlight") 
			{
				let headlights = PyroGX_Headlight(dscplr.FindInventory("PyroGX_Headlight"));
				if(headlights) headlights.Toggle();
			}
			if(e.Name ~== "+convertenergy") 
			{
				let converter = EnergyConvertDevice(dscplr.FindInventory("EnergyConvertDevice"));
				if(converter) converter.BeginConvert();
			}
			if(e.Name ~== "-convertenergy") 
			{
				let converter = EnergyConvertDevice(dscplr.FindInventory("EnergyConvertDevice"));
				if(converter) converter.StopConvert();
			}
			if(e.Name ~== "+boost") 
			{
				let jets = AfterBurner(dscplr.FindInventory("AfterBurner"));
				if(jets) jets.Enable();
			}
			if(e.Name ~== "-boost") 
			{
				let jets = AfterBurner(dscplr.FindInventory("AfterBurner"));
				if(jets) jets.Disable();
			}
			
			// Weapon systems
			String cmd = e.Name;
			Array<String> args;
			cmd.Split(args, ":");
			
			if(args[0] ~== "select_secondary")
			{
				int slot = args[1].toInt(10);
				if(!dscplr.PendingSpecial) 
				{
					let weap = dscplr.GetSpecialWeapon(slot);
					if(weap) dscplr.PendingSpecial = weap;
				}
			}
		}	
	}
}