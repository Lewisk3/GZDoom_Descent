// Base (Setup)
class DSCItemPickup : CustomInventory abstract
{
	int success;
	mixin DSCPickupGenerics;

	States
	{
		Done:
			TNT1 A 0 
			{
				DSCEffects.DoPickupFlash(self);
			}
		stop;
	}
}	
class DSCMissilePickup : DSCItemPickup
{
	class<DSCSpecialWeapon> missType;
	int amt;
	
	Property Setup : missType, amt;
	
	override string PickupMessage()
	{
		let defs = GetDefaultByType(missType);
		if(defs) return String.Format("%d %ss!", amt, defs.fullname); 
		
		return pickupmsg;
	}
		
	States
	{
		Spawn:
			TNT1 A 1;
		loop;
	
		Pickup:
			TNT1 A 0 A_GiveInventory(invoker.missType, invoker.amt);
		goto Done;
	}
}

// Boosts
class EnergyBoost : DSCItemPickup
{	
	string boostMsg;

	Default
	{
		Scale 0.45;
	}
	
	override string PickupMessage()
	{
		return boostMsg;
	}
	virtual int GetBoostAmount()
	{
		switch(skill)
		{
			case 0:  return 27;
			case 1:  return 15;
			case 2:  return 12;
			case 3:  return 9;
			case 4:  return 6;
			default: return 12;
		}
	}
	
	States
	{
		Spawn:
			ENRG ABCDEFGHIJKLMNO 3 Bright;
		loop;
	
		Pickup:
			TNT1 A 0 
			{
				let dscplr = DescentPlayer(self);
				dscplr.energy += invoker.GetBoostAmount();
				invoker.boostMsg = String.Format("Energy boosted to %d", dscplr.energy);
			}
		goto Done;
	}
}
class ShieldsBoost : EnergyBoost
{
	States
	{
		Spawn:
			SHLD ABCDEFGH 3 Bright;
		loop;
	
		Pickup:
			TNT1 A 0 
			{
				let dscplr = DescentPlayer(self);
				dscplr.shields += invoker.GetBoostAmount();
				invoker.boostMsg = String.Format("Shields boosted to %d", dscplr.shields);
			}
		goto Done;
	}
}
class ExtraLife : DSCItemPickup
{
	Default
	{
		Scale 0.45;
		Inventory.PickupMessage "Extra Life!";
	}
	
	States
	{
		Spawn:
			LIFE ABCDEFGHIJKLMNO 3 Bright;
		loop;
		
		Pickup:
			TNT1 A 0 A_GiveInventory("Token_ExtraLife", 1);
		goto Done;
	}
}


// Powerups
class PowerCloak : PowerInvisibility 
{
	Default
	{
		+CANTSEEK;
		Powerup.Duration -30;
	}
}
class CloakDevice : DSCItemPickup
{
	Default
	{
		Scale 0.45;
		Inventory.PickupMessage "Cloaking Device!";
	}
	
	States
	{
		Spawn:
			CLOK ABCDEFGHIJKLMNOP 3 Bright;
		loop;
		
		Pickup:
			TNT1 A 0 A_GiveInventory("PowerCloak", 1);
		goto Done;
	}
}
class PowerInvuln : PowerInvulnerable 
{
	Default
	{
		Powerup.Duration -30;
	}
}
class Invulnerability : DSCItemPickup
{
	Default
	{
		Scale 0.45;
		Inventory.PickupMessage "Invulnerability!";
	}
	
	States
	{
		Spawn:
			IVLN ABCDEFGHIJKLMNOP 3 Bright;
		loop;
		
		Pickup:
			TNT1 A 0 A_GiveInventory("PowerInvuln", 1);
		goto Done;
	}
}

// Tokens
class Token_ExtraLife : Inventory
{
	Default
	{
		Inventory.MaxAmount 99;
	}
}

