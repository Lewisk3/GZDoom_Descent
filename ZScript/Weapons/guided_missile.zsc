class Descent_GuidedMissile : DSCSpecialWeapon
{
	bool fireLeft;

	Default
	{
		DSCSpecialWeapon.Tag "GUIDED\n\c[DarkGreen]MISSILE";
		DSCSpecialWeapon.WeaponName "Guided Missile";
		DSCSpecialWeapon.DisplayGraphic "guidedMissile";
		DSCSpecialWeapon.SetupCrosshairs "Crosshair/missile2", "Crosshair/missile0";
		DSCSpecialWeapon.SlotNumber 6;
		DSCSpecialWeapon.AmmoBundle "Descent_GuidedMissileBundle";
		Inventory.MaxAmount 20 * DSCMAXAMMO;
	}
	
	
	override bool Fire()
	{
		if(cooldown || raiseY < 1.0) return false;
		if(amount <= 0) return false;
		
		if(ShootProjectile("DSCProj_GuidedMissile", offs:(10,fireLeft ? -15 : 15, 0)))
		{
			fireLeft = !fireLeft;
			OnCrosshair = fireLeft ? "Crosshair/missile1" : "Crosshair/missile2";
			cooldown = 10;
			Deplete();
		}
		
		return true;
	}
	
	States
	{
		Spawn:
			GMIS ABCDEFGHIJKLMNO 5;
		loop;
	}
}

class Descent_GuidedMissileBundle : DSCMissilePickup
{
	Default
	{
		DSCMissilePickup.Setup "Descent_GuidedMissile", 4;
	}
	
	States
	{
		Spawn:
			GMS4 ABCDEFGHIJKLMNO 5;
		loop;
	}
}

class DSCProj_GuidedMissile : DSCProj_ConMissile
{
	Default
	{
		Scale 1.25;
		Speed 15;
		DamageFunction 49 * DSCDMG;
		DSCProjectile.FireSound "GuidedMissile/Fire";
		DSCProjectile.GuidedMissile true;
		Tag "Guided";
	}
}