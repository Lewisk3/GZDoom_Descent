class Descent_HelixCannon : DSCWeapon
{
	double fireAngle;
	
	Default
	{
		Weapon.SlotNumber 7;
		Tag "Helix";
		DSCWeapon.WeaponName "Helix Cannon";
		DSCWeapon.DisplayGraphic "WeapHelix";
		DSCWeapon.SetupCrosshairs "Crosshair/weapon1", "Crosshair/weapon0";
	}
	
	action void A_FirePattern(double firespread = 6)
	{
		double soffs = -firespread;
		for(int i = 0; i < 5; i++)
		{
			vector2 spread = (soffs, 0);
			spread = RotateVector(spread, invoker.fireAngle);
			
			let proj = DSCProjectile(A_ShootProjectile("DSCProj_Helix", "HelixCannon/Fire", true, 0,0,0, (20,0,-10)));
			if(proj) proj.localAccel = (0,spread.x,spread.y + 1.25);
			soffs += (firespread*0.5);
		}
	}
	
	States
	{
		Ready:
			TNT1 A 1 A_WeaponReady();
		Loop;
		
		Fire:
			TNT1 A 6
			{
				A_FirePattern(4);
				invoker.fireAngle += 22.5;
			}
		Goto Ready;
		
		Spawn:
			HELX ABCDEFGHIJKLMNOP 5;
		loop;
	}
}

class DSCProj_Helix : DSCProjectile
{
	Default
	{	
		Radius 5;
		Height 5;
		Speed 40;
		DamageFunction 8 * DSCDMG;
		Scale 0.12;
		DSCProjectile.EnergyUse 0.12;
		Decal "Scorch";
	}
	
	States
	{
		Spawn:
			SHLX ABC 3 Bright;
		loop;
	
		Crash:
		Death:
		XDeath:
			TNT1 A 0 A_SetScale(1.0);
			EXDA ABCDE 2 Bright A_StartSound("Projectile/Explode", flags:CHANF_OVERLAP);
		stop;
	}
}
