class Descent_FusionCannon : DSCWeapon
{
	double charge;
	double charge_hue;
	
	Default
	{
		Weapon.SlotNumber 8;
		Tag "Fusion";
		DSCWeapon.WeaponName "Fusion Cannon";
		DSCWeapon.DisplayGraphic "WeapFusion";
		DSCWeapon.SetupCrosshairs "Crosshair/weapon1", "Crosshair/weapon0";
		DSCWeapon.EnergyGive 12;
	}
	
	action void A_FireFusion(double fw, double lr, double ud)
	{
		let proj = DSCProj_FusionPlasma(A_ShootProjectile("DSCProj_FusionPlasma", "FusionCannon/Fire", true, offs:(fw,lr,ud)));
		if(proj) proj.charge = invoker.charge;
	}
	
	States
	{
		Ready:
			TNT1 A 1 A_WeaponReady();
		Loop;
		
		Fire:
		Hold:
			TNT1 A 1
			{
				let dscplr = DescentPlayer(self);
				if(!invoker.charge) 
				{
					A_StartSound("FusionCannon/Charge", flags:CHANF_OVERLAP);
					invoker.charge_hue = 280;
				}
				else if(invoker.charge >= 0.2)
				{
					A_StartSound("FusionCannon/ChargeLoop", CHAN_WEAPON, CHANF_OVERLAP | CHANF_LOOPING);
				}
				
				invoker.charge += 0.01;
				dscplr.energy -= 0.05 * invoker.charge;
				invoker.charge = clamp(invoker.charge, 0, 1.0);
				if(dscplr.energy <= 0) return ResolveState("DoFire");
				
				if(invoker.charge >= 0.8) dscplr.shields -= 0.1;
				
				double interpHue = 50;
				double curHue = DSCMath.Lerp(int(invoker.charge_hue), interpHue, invoker.charge);
				A_ScreenFlash(DSCStatusColor.hslToRgb(curHue / 360.0, 1.0, 0.5), 0.35);
				vector3 shake = (
					frandom(-1.0, 1.0),
					frandom(-1.0, 1.0),
					frandom(-1.0, 1.0)
				);
				vector3 viewShake = shake * 0.30;
				vector3 velShake = shake * 0.60;
				
				A_ViewRecoil(viewShake.x,viewShake.y,viewShake.z);
				vel += velShake;
				return ResolveState(null);
			}
			TNT1 A 0 A_ReFire();
		DoFire:
			TNT1 A 2 
			{
				A_StopSound(CHAN_WEAPON);
				A_FireFusion(20,-15,-10);
				A_FireFusion(20, 15,-10);
				A_ScreenFlash("Purple", 0.35);
				A_ViewRecoil(-4.0, -4.0, 0);
				A_RecoilPush(-2,0,0);
				invoker.charge = 0;
			}
			TNT1 A 2;
			TNT1 A 0 A_ViewRecoil(2.8, 2.8, 0);
			TNT1 A 35; 
		Goto Ready;
		
		Spawn:
			FUSC ABCDEFGHIJKLMNO 5;
		loop;
	}
}	

class DSCProj_FusionCore : DSCProj_LaserCore {}
class DSCProj_FusionPlasma : DSCProj_Laser
{
	double charge;
	
	Default
	{	
		DamageFunction GetDamage();
		DSCProj_Laser.CoreType "DSCProj_FusionCore";
		DSCProj_Laser.LaserColor "#B500C7";
		DSCProj_Laser.CoreColor "#F200FF";
		DSCProjectile.energyUse 2.0;
		Decal "Scorch";
	}
	
	virtual int GetDamage()
	{
		return DescentDMG( 60 + (60*charge) );
	}
	
	States
	{	
		Crash:
		Death:
		XDeath:
			TNT1 A 0 
			{
				A_SetScale(1.0);
				A_StartSound("Projectile/Explode", flags:CHANF_OVERLAP);
			}
			EXDW ABCDEFGHIJ 2 Bright;
		stop;
	}
}